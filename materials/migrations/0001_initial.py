# Generated by Django 3.1.3 on 2020-11-19 09:09

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('placeholder', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('category', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='materials.attribute')),
            ],
            options={
                'ordering': ('category__name',),
                'unique_together': {('category', 'name')},
            },
        ),
        migrations.CreateModel(
            name='AttributeOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('placeholder', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('valid_for', models.ManyToManyField(help_text='Choice is valid for what attributes', to='materials.Attribute')),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Recycler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RecyclerQuality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20)),
                ('min_count', models.IntegerField(default=1, help_text='Minimum number of operations to be satisfied, -1 means all available conditions must be satisfied')),
                ('operations', models.JSONField(default=list)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='materials.material')),
                ('recycler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='materials.recycler')),
            ],
            options={
                'unique_together': {('title', 'recycler')},
            },
        ),
        migrations.CreateModel(
            name='MaterialAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_type', models.CharField(choices=[('p', 'Percentage'), ('c', 'Choice')], max_length=20)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='materials.attribute')),
                ('choice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='materials.attributeoption')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='materials.material')),
            ],
            options={
                'unique_together': {('attribute', 'material')},
            },
        ),
    ]
